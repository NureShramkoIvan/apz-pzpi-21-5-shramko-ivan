1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

При проектуванні мобільного застосунку використовувалася дворівнева архітектура, рівні якої фізично розділені на окремі проекти і відповідають рівню представлення та рівню доступу до даних. Діаграма компонентів зображена на рисунку 2.1.
Перший рівень представлення відповідає за відображення компонентів, оновлення представлень, застосування локалізації до текстів представлень. Другий рівень доступу до даних відповідає за надсилання запитів до серверної частини, обробку цих даних, надає механізми авторизації та аутентифікації. На рисунку 2.2 зображено діаграму пакетів мобільного застосунку.
Рівень доступу до даних комунікує з серверною частиною використовуючи протоколи HTTPS, з використанням HTTP-клієнту для отримання даних з основного сервісу, наприклад отримання списку тренувальних сесій, авторизації, тощо та викликаючи віддалені процедури по протоколу GRPC на сервісі для обробки даних тренувальних сесій та управління тренувальними сесіями, наприклад отримання результатів сесії, її початок та завершення, початок та завершення спроби учасника, цей сервіс в свою чергу надсилає повідомлення пристрою використовуючи протокол MQTT. Також в окремий пакет винесено моделі запиту та відповіді та спільні класи такі як константи, для зменшення дублювання коду на різних рівнях.

2 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Мобільний застосунок розроблений для використання двома типами користувачів: учасник тренувань та інструктор. Функції закладені для цієї частини системи включають в себе, безпосереднє проведення тренувань інструктором та отримання результатів учасником. Діаграма прецедентів зображена на малюнку 1.1.
Учасник тренувальної сесії та інструктор мають можливість входу в систему. Учаснику тренувальних сесій також доступні наступні функції: перегляд запланованих для його групи тренувальних сесій та перегляд результатів тренувальних сесій. Інструктору доступні наступні функції: початок та завершення тренувальних сесій, а також початок та завершення спроб учасників даної сесії.

3 ПОБУДОВА ДІАГРАМИ ДІЯЛЬНОСТІ

На рисунку 1.2 зображено діаграму діяльності, де відображено порядок виконання дій для проведення тренувальної сесії з використанням мобільного застосунку.
Проведення тренувальної сесії з подальшим переглядом результатів є основним сценарієм використання системи. Під час проведення тренування інструктор по черзі запускає проходження програми для кожного учасника в групі, фіксуючи його результати після закінчення тренування учасникам доступні результати тренувальної сесії.       

4 ОПИС ТЕХНІЧНИХ РІШЕНЬ

2.2 Реалізація рівня представлення
Для написання мобільного застосунку використовувалася бібліотека .NET MAUI. На рівні представлення знаходяться сторінки застосунку кожна з яких складається з класу С# та XML файлу розмітки. Кожна така сторінка використовує шаблон MVVM, файл з класом C#, відповідає Моделі представлення, та повідомляє представлення про оновлення стану, а також реагує на оновлення представлення і комунікує з моделлю, якої в даному випадку виступають класи доступу до даних через HTTP та GRPC клієнти, таким чином зберігається розділення відповідальності і представлення не комунікує з моделлю на пряму. Нижче наведено приклад фрагментів програмного коду, що демонструє дану взаємодію.
Представлення комунікує з моделлю представлення через підписку на подію:
2.3 Безпека та захист даних
В мобільному застосунку програмної системи відповідно до вимог використовуються механізми авторизації аутентифікації, використання безпечних протоколів передачі даних HTTPS, обмеження доступу до функцій системи відповідно до ролі користувача.
Механізми аутентифікації передбачають використання використання JWT токенів для отримання доступу до системи під час входу, генерація яких відбувається на стороні серверної частини за допомогою унікального приватного ключа.
Токен також містить в собі інформацію про роль користувача, на стороні мобільного застосунку відповідно до ролі користувачу надається доступ до певних функцій системи.
2.4 Локалізація та інтернаціоналізація
В системі передбачена підтримка локалізації для англійської та української мов. Переклади текстів зберігаються у файлах ресурсів, користувач має змогу динамічно змінювати мову застосунку. У нижче наведених прикладах програмного коду продемонстровано, зберігання перекладів та локалізація текстів у представленнях. Також у застосунку відповідно до часової зони користувача змінюється час сесій.
2.5 Бізнес-логіка
Мобільний застосунок має наступну бізнес-логіку та обробку користувацьких даних, а саме отримання результатів тренувальних сесій для користувача, де вираховується коефіцієнт успішності, час проходження, процент успішно та неуспішно пройдених етапів програми. У нижче наведеному прикладі програмного коду демонструється отримання даних про результати тренувальної сесії.

ВИСНОВКИ

В результаті розробки частини мобільного застосунку програмної системи «Програмна система для автоматизації проведення тренувань та змагань з керування дронами» описано прийняті інженерні рішення, загальну архітектуру системи, використовуються безпечні протоколи взаємодії, забезпечена локалізація та інтернаціоналізація, робота з датами та часом, механізми комунікації пристрою з серверною частиною, реалізовані математичні методи обробки даних. Звіт включає в себе наступні діаграми: Звіт включає в себе наступні діаграми: UML діаграму компонент, UML діаграму прецедентів, UML діаграму пакетів, UML діаграму діяльності.